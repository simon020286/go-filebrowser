{"version":3,"sources":["Reducers/MainReducer.js","serviceWorker.js","config.js","Api/ApiHandler.js","Api/Api.js","Actions/Actions.js","Components/File/File.jsx","Components/FileList/FileListEmptyMessage.jsx","Components/Loader/Loader.jsx","Components/FileList/FileList.jsx","Components/ContextMenu/ContextMenuActions/CreateFolderAction.jsx","Components/ContextMenu/ContextMenuActions/UploadFileAction.jsx","Components/ContextMenu/ContextMenuActions/TaskAction.jsx","Components/Navbar/ThreeDotsMenu.jsx","Components/Breadcrumb/BreadcrumbText.jsx","Components/Navbar/Navbar.jsx","Components/ContextMenu/ContextMenuActions/OpenAction.jsx","Components/ContextMenu/ContextMenuActions/RemoveAction.jsx","Components/ContextMenu/ContextMenuActions/MoveAction.jsx","Components/ContextMenu/ContextMenuActions/CopyAction.jsx","Components/ContextMenu/ContextMenuActions/EditAction.jsx","Components/ContextMenu/ContextMenuActions/RenameAction.jsx","Components/ContextMenu/ContextMenuActions/DownloadAction.jsx","Components/ContextMenu/ContextMenu.jsx","Components/Dialogs/Content/Content.jsx","Components/Dialogs/Edit/Edit.jsx","Components/Dialogs/CreateFolder/CreateFolder.jsx","Components/Dialogs/Rename/Rename.jsx","Components/File/FileSublist/FileSublist.jsx","Components/FileList/FileListSublist/FileListSublist.jsx","Components/Dialogs/Move/Move.jsx","Components/Dialogs/Copy/Copy.jsx","Components/FileUploader/UploadFileList.jsx","Components/FileUploader/FileUploader.jsx","Components/Dialogs/UploadFile/UploadFile.jsx","Components/Task/Task.jsx","Components/TaskList/TaskList.jsx","Components/Dialogs/Task/Task.jsx","Components/Dialogs/Dialogs.jsx","Components/Notification/DynamicSnackbar.jsx","App.js","index.js"],"names":["defaultState","path","pathSublist","fileList","fileListSublist","fileListFilter","contextMenuVisible","contextMenuPosition","contextMenuPositionElement","selectedFiles","selectedFolderSublist","loading","loadingSublist","errorMsg","visibleDialogCreateFolder","visibleDialogUploadFile","visibleDialogContent","visibleDialogEdit","visibleDialogMove","visibleDialogCopy","visibleDialogRename","visibleDialogTask","fileContentBlobUrl","fileUploadProgress","fileUploadList","taskList","MainReducer","state","arguments","length","undefined","action","type","Object","assign","value","toConsumableArray","concat","sort","a","b","name","toLowerCase","filter","f","i","self","map","ff","indexOf","find","parseInt","URL","revokeObjectURL","createObjectURL","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","host","url_list","url_create_folder","url_get_content","url_download","url_upload","url_remove","url_rename","url_move","url_copy","url_edit","url_compress","url_extract","url_task_list","isEditableFilePattern","isImageFilePattern","isExtractableFilePattern","actions","create_folder","move","copy","copy_folder","compress","extract","edit","remove","upload","upload_by_chunks","preview_images","messageTranslation","unknown_response","TypeError: Failed to fetch","handleFetch","resolve","reject","xthen","response","contentType","headers","get","contentDisp","isJson","test","isAttachment","ok","json","Error","blob","success","data","xcatch","errorResponse","errJson","JSON","stringify","fixPath","replace","getFileList","Promise","fetch","encodeURIComponent","API","getFileBody","filename","renameItem","newFileName","oldPath","newPath","destination","method","Content-Type","body","createFolder","folder","trim","directory","removeItems","filenames","recursive","moveItems","copyItems","uploadFiles","formData","FormData","forEach","append","getActionsByMultipleFiles","files","acts","file","fileActs","push","compressible","editable","extractable","getActionsByFile","splice","getHumanFileSize","bytes","e","Math","pow","toFixed","getTaskList","refreshFileList","dispatch","getState","setLoading","setSelectedFiles","APIHandler","join","r","setFileList","toString","refreshTaskList","setTaskList","refreshFileListSublist","setLoadingSublist","setSelectedFolderSublist","setFileListSublist","getFileContent","fileName","setFileContent","setVisibleDialogContent","getFileContentForEdit","setVisibleDialogEdit","setSelectedFileFromLastTo","lastFile","_getState12","lastPreviouslySelected","pop","lastPreviouslySelectedIndex","lastSelectedIndex","toAdd","index","element","initSubList","setPathSublist","resetFileUploader","setFileUploadProgress","setVisibleDialogUploadFile","setFileUploadList","enterToPreviousDirectorySublist","slice","setPath","enterToDirectory","setFileListFilter","search","setContextMenuVisible","visible","setVisibleDialogCreateFolder","setVisibleDialogRename","setVisibleDialogMove","setVisibleDialogCopy","setVisibleDialogTask","percentage","File","_this$props","this","props","isSelected","size","handleClick","handleDoubleClick","handleContextMenu","avatarStyle","backgroundColor","blue","realSize","react_default","createElement","className","onClick","onDoubleClick","onContextMenu","data-selected","ListItem_default","ListItemAvatar_default","Avatar_default","style","Folder_default","InsertDriveFile_default","ListItemText_default","primary","secondary","Component","connect","ownProps","filePath","event","preventDefault","stopPropagation","x","clientX","touches","pageX","y","clientY","pageY","shiftKey","setContextMenuPosition","ctrlKey","FileListEmptyMessage","withStyles","theme","progress","margin","spacing","unit","classes","Grid_default","container","justify","CircularProgress_default","color","FileList","fileListComponent","key","Components_File_File","Loader_Loader","Components_FileList_FileListEmptyMessage","toLocaleLowerCase","callback","handleClose","MenuItem_default","ListItemIcon_default","CreateNewFolder_default","Typography_default","variant","CloudUpload_default","FileCopy_default","ThreeDotsMenu","anchorEl","_this","setState","currentTarget","marginLeft","IconButton_default","aria-label","aria-owns","aria-haspopup","MoreVert_default","Menu_default","open","onClose","ContextMenuActions_CreateFolderAction","ContextMenuActions_UploadFileAction","ContextMenuActions_TaskAction","React","BreadcrumbText","handleClickPath","rootTitle","handleGoBack","canGoBack","separator","rootPath","data-index","lastPath","directories","dir","Button_default","display","KeyboardArrowLeft_default","paths","defineProperty","breakpoints","up","root","width","marginBottom","grow","flexGrow","menuButton","marginRight","title","position","borderRadius","shape","fade","palette","common","white","&:hover","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","handleChange","enterToPreviousDirectoryByIndex","AppBar_default","Toolbar_default","noWrap","Components_Breadcrumb_BreadcrumbText","Search_default","InputBase_default","placeholder","onChange","input","Navbar_ThreeDotsMenu","OpenInBrowser_default","Delete_default","HowToVote_default","WrapText_default","blobUrl","tempLink","document","href","setAttribute","click","CloudDownload_default","ContextMenu","actionsComp","act","component","ContextMenuActions_OpenAction","EditAction","ContextMenuActions_CopyAction","ContextMenuActions_MoveAction","RenameAction","ContextMenuActions_DownloadAction","ContextMenuActions_RemoveAction","anchorReference","anchorPosition","top","left","transformOrigin","vertical","horizontal","PaperProps","FormDialog","lastBlobUrl","content","Dialog_default","aria-labelledby","fullWidth","maxWidth","DialogTitle_default","id","DialogContent_default","src","alt","DialogActions_default","handleOpen","_this2","text","t","handleSave","textArea","minHeight","defaultValue","DialogContentText_default","TextField_default","autoFocus","label","createFolderName","folderName","form","querySelector","realName","bind","newName","FileSublist","FileListSublist","File_FileSublist_FileSublist","selectedPath","canMove","FileList_FileListSublist_FileListSublist","disabled","_getState10","canCopy","_getState11","UploadFileList","list","dense","List_default","FileUploader","refs","inputfile","handleReset","handleSelectedFiles","styles","inputreset","htmlFor","ref","multiple","FileUploader_UploadFileList","handleUpload","canUpload","Components_FileUploader_FileUploader","LinearProgress_default","setTimeout","target","Task","status","index_es","TaskList","taskListComponent","items","task","handleRefresh","Dialogs","Content","Edit","CreateFolder","Move","Copy","Rename","UploadFile","Task_Task","DynamicSnackbar","notificationDuration","Snackbar_default","anchorOrigin","autoHideDuration","ContentProps","aria-describedby","message","close","Close_default","padding","createMuiTheme","typography","useNextVariants","App","init","core_styles","handleHideContextMenu","Navbar","Components_FileList_FileList","Components_ContextMenu_ContextMenu","Notification_DynamicSnackbar","Dialogs_Dialogs","tagName","store","createStore","applyMiddleware","thunk","ReactDOM","render","react_redux_es","src_App","getElementById","process","origin","addEventListener","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.64759b9d.chunk.js","sourcesContent":["export const defaultState = {\r\n    path: [],\r\n    pathSublist: [],\r\n    fileList: [],\r\n    fileListSublist: [],\r\n    fileListFilter: null,\r\n    contextMenuVisible: null,\r\n    contextMenuPosition: [],\r\n    contextMenuPositionElement: null,\r\n    selectedFiles: [],\r\n    selectedFolderSublist: null,\r\n    loading: false,\r\n    loadingSublist: false,\r\n    errorMsg: null,\r\n    visibleDialogCreateFolder: false,\r\n    visibleDialogUploadFile: false,\r\n    visibleDialogContent: false,\r\n    visibleDialogEdit: false,\r\n    visibleDialogMove: false,\r\n    visibleDialogCopy: false,\r\n    visibleDialogRename: false,\r\n    visibleDialogTask: false,\r\n    fileContentBlobUrl: null,\r\n    fileUploadProgress: 0,\r\n    fileUploadList: [],\r\n    taskList: []\r\n};\r\n\r\n/**\r\n * Main content reducer\r\n * @param {Object} state\r\n * @param {Object} action\r\n * @returns {Object}\r\n */\r\nconst MainReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_PATH':\r\n            return Object.assign({}, state, {\r\n                path: action.value\r\n            });\r\n        case 'SET_PATH_SUB_LIST':\r\n            return Object.assign({}, state, {\r\n                pathSublist: action.value\r\n            });\r\n        case 'ENTER_TO_DIRECTORY':\r\n            return Object.assign({}, state, {\r\n                path: [...state.path, action.value]\r\n            });\r\n        case 'ENTER_TO_DIRECTORY_SUB_LIST':\r\n            return Object.assign({}, state, {\r\n                pathSublist: [...state.pathSublist, action.value]\r\n            });\r\n        case 'SET_TASK_LIST':\r\n            return Object.assign({}, state, {\r\n                taskList: action.value\r\n            });\r\n        case 'SET_FILE_LIST':\r\n            return Object.assign({}, state, {\r\n                fileList: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\r\n            });\r\n        case 'SET_FILE_LIST_SUB_LIST':\r\n            return Object.assign({}, state, {\r\n                fileListSublist: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\r\n            });\r\n        case 'SET_FILE_LIST_FILTER':\r\n            return Object.assign({}, state, { \r\n                fileListFilter: action.value\r\n            });\r\n        case 'SET_CONTEXT_MENU_VISIBLE':\r\n            return Object.assign({}, state, { \r\n                contextMenuVisible: action.value\r\n            });\r\n        case 'SET_CONTEXT_MENU_POSITION':\r\n            return Object.assign({}, state, { \r\n                contextMenuPosition: action.value\r\n            });\r\n        case 'SET_CONTEXT_MENU_POSITION_ELEMENT':\r\n            return Object.assign({}, state, { \r\n                contextMenuPositionElement: action.value\r\n            });\r\n        case 'SET_SELECTED_FILES':\r\n            return Object.assign({}, state, {\r\n                selectedFiles: (action.value).filter((f, i, self) => self.map(ff => ff.name).indexOf(f.name) === i)\r\n            });\r\n        case 'SET_SELECTED_FOLDER_SUB_LIST':\r\n            return Object.assign({}, state, {\r\n                selectedFolderSublist: action.value\r\n            });\r\n\r\n        case 'TOGGLE_SELECTED_FILE':\r\n            return Object.assign({}, state, {\r\n                selectedFiles: state.selectedFiles.find(f => f.name === action.value.name) ?\r\n                    state.selectedFiles.filter(f => f.name !== action.value.name) :\r\n                    [...state.selectedFiles, action.value]\r\n            });\r\n        case 'SET_FILE_UPLOAD_PROGRESS':\r\n            return Object.assign({}, state, {\r\n                fileUploadProgress: parseInt(action.value || 0)\r\n            });\r\n        case 'SET_LOADING':\r\n            return Object.assign({}, state, { \r\n                loading: action.value\r\n            });\r\n        case 'SET_LOADING_SUB_LIST':\r\n            return Object.assign({}, state, { \r\n                loadingSublist: action.value\r\n            });\r\n        case 'SET_ERROR_MSG':\r\n            return Object.assign({}, state, { \r\n                errorMsg: action.value\r\n            });\r\n\r\n        case 'SET_VISIBLE_DIALOG_CREATE_FOLDER':\r\n            return Object.assign({}, state, { \r\n                visibleDialogCreateFolder: !!action.value\r\n            });\r\n            \r\n        case 'SET_VISIBLE_DIALOG_UPLOAD_FILE':\r\n            return Object.assign({}, state, { \r\n                visibleDialogUploadFile: !!action.value\r\n            });\r\n\r\n        case 'SET_VISIBLE_DIALOG_CONTENT':\r\n            return Object.assign({}, state, { \r\n                visibleDialogContent: !!action.value\r\n            });\r\n\r\n        case 'SET_VISIBLE_DIALOG_EDIT':\r\n            return Object.assign({}, state, { \r\n                visibleDialogEdit: !!action.value\r\n            });\r\n\r\n        case 'SET_VISIBLE_DIALOG_MOVE':\r\n            return Object.assign({}, state, { \r\n                visibleDialogMove: !!action.value\r\n            });\r\n        case 'SET_VISIBLE_DIALOG_COPY':\r\n            return Object.assign({}, state, { \r\n                visibleDialogCopy: !!action.value\r\n            });\r\n        case 'SET_VISIBLE_DIALOG_RENAME':\r\n            return Object.assign({}, state, { \r\n                visibleDialogRename: !!action.value\r\n            });\r\n        case 'SET_VISIBLE_DIALOG_TASK': \r\n            return Object.assign({}, state, {\r\n                visibleDialogTask: !!action.value\r\n            })\r\n        case 'SET_FILE_UPLOAD_LIST':\r\n            return Object.assign({}, state, {\r\n                fileUploadList: action.value\r\n            });\r\n\r\n        case 'SET_FILE_CONTENT':\r\n            /**\r\n             * Removing old blob url\r\n             */\r\n            state.fileContentBlobUrl && URL.revokeObjectURL(state.fileContentBlobUrl);\r\n            return Object.assign({}, state, { \r\n                fileContentBlobUrl: action.value ? URL.createObjectURL(action.value) : null\r\n            });\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default MainReducer;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const host = 'http://localhost:8080';\r\n\r\nexport default {\r\n    url_list: `${host}/filemanager/list`,\r\n    url_create_folder: `${host}/filemanager/dir/create`,\r\n    url_get_content: `${host}/filemanager/file/content`,\r\n    url_download: `${host}/filemanager/file/content`,\r\n    url_upload: `${host}/filemanager/items/upload`,\r\n    url_remove: `${host}/filemanager/items/remove`,\r\n    url_rename: `${host}/filemanager/item/move`,\r\n    url_move: `${host}/filemanager/items/move`,\r\n    url_copy: `${host}/filemanager/items/copy`,\r\n    url_edit: `${host}/filemanager/file/edit`,\r\n    url_compress: `${host}/filemanager/items/compress`,\r\n    url_extract: `${host}/filemanager/file/extract`,\r\n    url_task_list: `${host}/filemanager/tasks`,\r\n\r\n    isEditableFilePattern: /\\.(txt|diff?|patch|svg|asc|cnf|cfg|conf|html?|cfm|cgi|aspx?|ini|pl|py|md|css|cs|jsx?|jsp|log|htaccess|htpasswd|gitignore|gitattributes|env|json|atom|eml|rss|markdown|sql|xml|xslt?|sh|rb|as|bat|cmd|cob|for|ftn|frm|frx|inc|lisp|scm|coffee|php[3-6]?|java|c|cbl|go|h|scala|vb|tmpl|lock|go|yml|yaml|tsv|lst)$/i,\r\n    isImageFilePattern: /\\.(jpe?g|gif|bmp|png|svg|tiff?)$/i,\r\n    isExtractableFilePattern: /\\.(gz|tar|rar|g?zip)$/i,\r\n\r\n    actions: {\r\n        create_folder: true,\r\n        move: true,\r\n        copy: true,\r\n        copy_folder: true,\r\n        compress: true,\r\n        extract: true,\r\n        edit: true,\r\n        remove: true,\r\n        upload: true,\r\n        upload_by_chunks: true,\r\n        preview_images: true,\r\n    }\r\n};\r\n","import * as API from './Api.js';\r\nimport config from './../config.js';\r\n\r\nconst messageTranslation = {\r\n    'unknown_response': 'Unknown error response from connector',\r\n    'TypeError: Failed to fetch': 'Cannot get a response from connector.',\r\n};\r\n\r\n/**\r\n * Response handler for fetch responses\r\n * @param {Function} resolve\r\n * @param {Function} reject\r\n * @returns {Object}\r\n */\r\nconst handleFetch = (resolve, reject) => {\r\n    return {\r\n        xthen: (response) => {\r\n            const contentType = response.headers.get('content-type');\r\n            const contentDisp = response.headers.get('content-disposition');\r\n            const isJson = /(application|text)\\/json/.test(contentType);\r\n            const isAttachment = /attachment/.test(contentDisp);\r\n\r\n            if (! response.ok) {\r\n                if (isJson) {\r\n                    throw response.json();\r\n                }\r\n                throw Error(messageTranslation['unknown_response']);\r\n            }\r\n\r\n            if (isAttachment) {\r\n                response.blob().then(blob => {\r\n                    resolve(blob);\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (isJson) {\r\n                response.json().then(json => {\r\n                    if (! json.success) {\r\n                        throw new Error();\r\n                    }\r\n                    resolve(json.data);\r\n                });\r\n                return;\r\n            }\r\n        },\r\n        xcatch: (errorResponse) => {\r\n            // is thrown json\r\n            if (errorResponse && errorResponse.then) {\r\n                errorResponse.then(errJson => {\r\n                    return reject(errJson.errorMsg || JSON.stringify(errJson));\r\n                });\r\n            } else {\r\n                return reject(messageTranslation[errorResponse] || errorResponse);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Clean path string removing double slashes and prepending a slash\r\n * @param {String} path\r\n * @returns {String}\r\n */\r\nconst fixPath = (path) => {\r\n    return ('/' + path).replace(/\\/\\//g, '/');\r\n};\r\n\r\n/**\r\n * Wrap API response for retrive file liest\r\n * @param {String} path\r\n * @returns {Object}\r\n */\r\nexport const getFileList = (path) => {\r\n    path = fixPath(path);\r\n    return new Promise((resolve, reject) => {\r\n        return API.list(path)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n/**\r\n * Wrap API response for retrive file content\r\n * @param {String} path\r\n * @returns {Object}\r\n */\r\nexport const getFileBody = (path, filename) => {\r\n    path = fixPath(path + '/' + filename);\r\n    return new Promise((resolve, reject) => {\r\n        return API.getFileContent(path)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n\r\n/**\r\n * Wrap API response for retrive file content\r\n * @param {String} path\r\n * @returns {Object}\r\n */\r\nexport const renameItem = (path, filename, newFileName) => {\r\n    const oldPath = fixPath(path + '/' + filename);\r\n    const newPath = fixPath(path + '/' + newFileName);\r\n\r\n    return new Promise((resolve, reject) => {\r\n        return API.rename(oldPath, newPath)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n/**\r\n * Wrap API response for create folder\r\n * @param {String} path\r\n * @param {String} folder\r\n * @returns {Object}\r\n */\r\nexport const createFolder = (path, folder) => {\r\n    path = fixPath(path);\r\n    return new Promise((resolve, reject) => {\r\n        if (! (folder || '').trim()) {\r\n            return reject('Invalid folder name');\r\n        }\r\n        return API.createDirectory(path, folder)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n/**\r\n * Wrap API response for remove file or folder\r\n * @param {String} path\r\n * @param {Array} filenames\r\n * @param {Boolean} recursive\r\n * @returns {Object}\r\n */\r\nexport const removeItems = (path, filenames, recursive = true) => {\r\n    path = fixPath(path);\r\n    return new Promise((resolve, reject) => {\r\n        if (! filenames.length) {\r\n            return reject('No files to remove');\r\n        }\r\n        return API.remove(path, filenames, recursive)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n/**\r\n * Wrap API response for move file or folder\r\n * @param {String} path\r\n * @param {Array} filenames\r\n * @param {Boolean} recursive\r\n * @returns {Object}\r\n */\r\nexport const moveItems = (path, destination, filenames) => {\r\n    path = fixPath(path);\r\n    destination = fixPath(destination);\r\n    return new Promise((resolve, reject) => {\r\n        if (! filenames.length) {\r\n            return reject('No files to move');\r\n        }\r\n        return API.move(path, destination, filenames)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n/**\r\n * Wrap API response for copy file or folder\r\n * @param {String} path\r\n * @param {Array} filenames\r\n * @param {Boolean} recursive\r\n * @returns {Object}\r\n */\r\nexport const copyItems = (path, destination, filenames) => {\r\n    path = fixPath(path);\r\n    destination = fixPath(destination);\r\n    return new Promise((resolve, reject) => {\r\n        if (! filenames.length) {\r\n            return reject('No files to copy');\r\n        }\r\n        return API.copy(path, destination, filenames)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n/**\r\n * Wrap API response for upload files\r\n * @param {String} path\r\n * @param {Object<FileList>} fileList\r\n * @returns {Object}\r\n */\r\nexport const uploadFiles = (path, fileList) => {\r\n    path = fixPath(path);\r\n\r\n    return new Promise((resolve, reject) => {\r\n        if (! fileList.length) {\r\n            return reject('No files to upload');\r\n        }\r\n        return API.upload(path, fileList)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n/**\r\n * Calculate available actions for a file\r\n * @param {Object} file\r\n * @returns {Array<String>}\r\n */\r\nexport const getActionsByFile = (file, acts = []) => {\r\n    if (file.type === 'dir') {\r\n        acts.push('open');\r\n\r\n        typeof file.compressible !== 'undefined' ?\r\n            file.compressible && acts.push('compress'):\r\n            acts.push('compress');\r\n    }\r\n\r\n    if (file.type === 'file') {\r\n        acts.push('download');\r\n        config.isImageFilePattern.test(file.name) && acts.push('open');\r\n\r\n        typeof file.editable !== 'undefined' ?\r\n            file.editable && acts.push('edit'):\r\n            config.isEditableFilePattern.test(file.name) && acts.push('edit');\r\n        \r\n        typeof file.extractable !== 'undefined' ?\r\n            file.extractable && acts.push('extract'):\r\n            config.isExtractableFilePattern.test(file.name) && acts.push('extract');\r\n\r\n        acts.push('copy');\r\n    }\r\n\r\n    acts.push('move');\r\n    acts.push('rename');\r\n    acts.push('perms');\r\n    acts.push('remove');\r\n\r\n    return acts;\r\n}\r\n\r\n/**\r\n * Calculate available actions for selected files, excluding non coincidences\r\n * @param {Array<Object>} files\r\n * @returns {Array<String>}\r\n */\r\nexport const getActionsByMultipleFiles = (files, acts = []) => {\r\n    files.forEach(file => {\r\n        const fileActs = getActionsByFile(file);\r\n        // intersects previous actions with the following to leave only coincidences\r\n        acts = acts.length ? acts.filter(value => -1 !== fileActs.indexOf(value)) : fileActs;\r\n    });\r\n\r\n    if (files.length > 1) {\r\n        acts.splice(acts.indexOf('open'), acts.indexOf('open') >= 0);\r\n        acts.splice(acts.indexOf('edit'), acts.indexOf('edit') >= 0);\r\n        acts.splice(acts.indexOf('compress'), acts.indexOf('compress') >= 0);\r\n        acts.splice(acts.indexOf('download'), acts.indexOf('download') >= 0);\r\n        acts.splice(acts.indexOf('rename'), acts.indexOf('rename') >= 0);\r\n        acts.push('compress');\r\n    }\r\n    return acts;\r\n}\r\n\r\n/**\r\n * Calculate file size by bytes in human readable format\r\n * @param {Number} bytes\r\n * @returns {String}\r\n */\r\nexport const getHumanFileSize = (bytes) => {\r\n    const e = (Math.log(bytes) / Math.log(1e3)) | 0;\r\n    return +(bytes / Math.pow(1e3, e)).toFixed(2) + ' ' + ('kMGTPEZY'[e - 1] || '') + 'B';\r\n};\r\n\r\n/**\r\n * Wrap API response for retrive task list\r\n * @returns {Promise}\r\n */\r\nexport const getTaskList = () => {\r\n    return new Promise((resolve, reject) => {\r\n        return API.tasks()\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};","import config from './../config.js';\r\n\r\n/**\r\n * Fetch API to list files from directory\r\n * @param {String} path\r\n * @returns {Object}\r\n */\r\nexport function list(path) {\r\n    return fetch(config.url_list + '?path=' + (encodeURIComponent(path) || '/'));\r\n};\r\n\r\n\r\n/**\r\n * Fetch API to create a directory\r\n * @param {String} path\r\n * @param {String} directory\r\n * @returns {Object}\r\n */\r\nexport function createDirectory(path, directory) {\r\n    return fetch(config.url_create_folder, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            path, directory\r\n        })\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * Fetch API to get file body\r\n * @param {String} path\r\n * @returns {Object}\r\n */\r\nexport function getFileContent(path) {\r\n    return fetch(config.url_get_content + '?path=' + (encodeURIComponent(path) || '/'));\r\n};\r\n\r\n\r\n/**\r\n * Fetch API to remove a file or folder\r\n * @param {String} path\r\n * @param {Array} filenames\r\n * @param {Boolean} recursive\r\n * @returns {Object}\r\n */\r\nexport function remove(path, filenames, recursive = true) {\r\n    return fetch(config.url_remove, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            path, filenames, recursive\r\n        })\r\n    });\r\n};\r\n\r\n/**\r\n * Fetch API to move files\r\n * @param {String} path\r\n * @param {Array} filenames\r\n * @param {Boolean} recursive\r\n * @returns {Object}\r\n */\r\nexport function move(path, destination, filenames) {\r\n    return fetch(config.url_move, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            path, destination, filenames\r\n        })\r\n    });\r\n};\r\n\r\n/**\r\n * Fetch API to move files\r\n * @param {String} path\r\n * @param {Array} filenames\r\n * @param {Boolean} recursive\r\n * @returns {Object}\r\n */\r\nexport function rename(path, destination) {\r\n    return fetch(config.url_rename, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            path, destination\r\n        })\r\n    });\r\n};\r\n\r\n/**\r\n * Fetch API to copy files\r\n * @param {String} path\r\n * @param {Array} filenames\r\n * @param {Boolean} recursive\r\n * @returns {Object}\r\n */\r\nexport function copy(path, destination, filenames) {\r\n    return fetch(config.url_copy, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            path, destination, filenames\r\n        })\r\n    });\r\n};\r\n\r\n/**\r\n * Fetch API to copy files\r\n * @param {String} path\r\n * @param {Object<FileList>} fileList\r\n * @returns {Object}\r\n */\r\nexport function upload(path, fileList, formData = new FormData()) {\r\n    [...fileList].forEach(f => {\r\n        formData.append('file[]', f);\r\n    });\r\n    formData.append('path', path);\r\n\r\n    return fetch(config.url_upload, {\r\n        method: 'POST',\r\n        body: formData, \r\n        headers: {\r\n            // a workaround for node connector, passing the path by header\r\n            path: path\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Fetch API to tasks list\r\n * @returns {Object}\r\n */\r\nexport function tasks() {\r\n    return fetch(config.url_task_list)\r\n}","import * as APIHandler from '../Api/ApiHandler.js';\r\n\r\n/**\r\n * Request API to get file list for the selected path then refresh UI\r\n * @returns {Function}\r\n */\r\nexport const uploadFiles = (fileList) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setLoading(true));\r\n    dispatch(setSelectedFiles([]));\r\n    dispatch(setFileUploadProgress(50));\r\n\r\n    APIHandler.uploadFiles(path.join('/'), fileList).then(r => {\r\n        dispatch(setFileUploadProgress(100));\r\n        setTimeout(f => {\r\n            dispatch(resetFileUploader());\r\n        }, 300);\r\n        dispatch(refreshFileList());\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n/**\r\n * Request API to get file list for the selected path then refresh UI\r\n * @returns {Function}\r\n */\r\nexport const refreshFileList = () => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setLoading(true));\r\n    dispatch(setSelectedFiles([]));\r\n\r\n    APIHandler.getFileList(path.join('/')).then(r => {\r\n        dispatch(setLoading(false));\r\n        dispatch(setFileList(r));\r\n    }).catch(r => {\r\n        dispatch(setFileList([]));\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n/**\r\n * Request API to get task list then refresh UI\r\n * @returns {Function}\r\n */\r\nexport const refreshTaskList = () => (dispatch, getState) => {\r\n    APIHandler.getTaskList().then(r => {\r\n        dispatch(setTaskList(r));\r\n    }).catch(r => {\r\n        dispatch(setTaskList([]));\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        })\r\n    })\r\n}\r\n\r\n/**\r\n * Request API to get file list for the selected path then refresh UI\r\n * @returns {Function}\r\n */\r\nexport const refreshFileListSublist = () => (dispatch, getState) => {\r\n    const { pathSublist } = getState();\r\n    dispatch(setLoadingSublist(true));\r\n    dispatch(setSelectedFolderSublist(null));\r\n\r\n    APIHandler.getFileList(pathSublist.join('/')).then(r => {\r\n        dispatch(setLoadingSublist(false));\r\n        dispatch(setFileListSublist(r));\r\n    }).catch(r => {\r\n        dispatch(setFileListSublist([]));\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoadingSublist(false));\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * Request API to get file content then dispatch defined events\r\n * @param {String} fileName\r\n * @returns {Function}\r\n */\r\nexport const getFileContent = (fileName) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n\r\n    dispatch(setLoading(true));\r\n    dispatch(setFileContent(null));\r\n    dispatch(setVisibleDialogContent(true));\r\n    APIHandler.getFileBody(path.join('/'), fileName).then(blob => {\r\n        dispatch(setFileContent(blob));\r\n        dispatch(setLoading(false));\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n/**\r\n * Request API to rename file then dispatch defined events\r\n * @param {String} fileName\r\n * @returns {Function}\r\n */\r\nexport const renameItem = (fileName, newFileName) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setLoading(true));\r\n    APIHandler.renameItem(path.join('/'), fileName, newFileName).then(blob => {\r\n        dispatch(setVisibleDialogRename(false));\r\n        dispatch(setLoading(false));\r\n        dispatch(refreshFileList());\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n/**\r\n * Request API to get download file then dispatch defined events\r\n * @param {String} fileName\r\n * @returns {Function}\r\n */\r\nexport const downloadFile = (fileName) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setLoading(true));\r\n    APIHandler.getFileBody(path.join('/'), fileName).then(blob => {\r\n        // TODO workaround large files disables ui for long time\r\n        const blobUrl = window.URL.createObjectURL(blob);\r\n        let tempLink = window.document.createElement('a');\r\n        tempLink.href = blobUrl;\r\n        tempLink.setAttribute('download', fileName);\r\n        tempLink.click();\r\n        window.URL.revokeObjectURL(blobUrl);\r\n        dispatch(setLoading(false));\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n/**\r\n * Request API to get file content then dispatch defined events\r\n * @param {String} fileName\r\n * @returns {Function}\r\n */\r\nexport const getFileContentForEdit = (fileName) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setLoading(true));\r\n    dispatch(setFileContent(null));\r\n    dispatch(setVisibleDialogEdit(true));\r\n    APIHandler.getFileBody(path.join('/'), fileName).then(blob => {\r\n        dispatch(setFileContent(blob));\r\n        dispatch(setLoading(false));\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * Request API to create a folder then dispatch defined events\r\n * @param {String} createFolderName\r\n * @returns {Function}\r\n */\r\nexport const createNewFolder = (createFolderName) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setLoading(true));\r\n\r\n    APIHandler.createFolder(path.join('/'), createFolderName).then(r => {\r\n        dispatch(setVisibleDialogCreateFolder(false));\r\n        dispatch(setLoading(false));\r\n        dispatch(refreshFileList());\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * Request API to remove an item then dispatch defined events\r\n * @param {Array} filenames\r\n * @returns {Function}\r\n */\r\nexport const removeItems = (files) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    const filenames = files.map(f => f.name);\r\n\r\n    dispatch(setLoading(true));\r\n    APIHandler.removeItems(path.join('/'), filenames).then(r => {\r\n        dispatch(setLoading(false));\r\n        dispatch(refreshFileList());\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * Request API to move an item then dispatch defined events\r\n * @param {Array} filenames\r\n * @returns {Function}\r\n */\r\nexport const moveItems = (files) => (dispatch, getState) => {\r\n    const { path, pathSublist, selectedFolderSublist } = getState();\r\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\r\n    const filenames = files.map(f => f.name);\r\n\r\n    dispatch(setLoading(true));\r\n    APIHandler.moveItems(path.join('/'), destination, filenames).then(r => {\r\n        dispatch(setLoading(false));\r\n        dispatch(setVisibleDialogMove(false));\r\n        dispatch(refreshFileList());\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * Request API to copy an item then dispatch defined events\r\n * @param {Array} filenames\r\n * @returns {Function}\r\n */\r\nexport const copyItems = (files) => (dispatch, getState) => {\r\n    const { path, pathSublist, selectedFolderSublist } = getState();\r\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\r\n    const filenames = files.map(f => f.name);\r\n\r\n    dispatch(setLoading(true));\r\n    APIHandler.copyItems(path.join('/'), destination, filenames).then(r => {\r\n        dispatch(setLoading(false));\r\n        dispatch(setVisibleDialogCopy(false));\r\n        dispatch(refreshFileList());\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n/**\r\n * This handles multiple selection by using shift key\r\n * @param {Object} lastFile\r\n * @returns {Function}\r\n */\r\nexport const setSelectedFileFromLastTo = (lastFile) => (dispatch, getState) => {\r\n    const { fileList, selectedFiles } = getState();\r\n\r\n    const lastPreviouslySelected = [...selectedFiles].pop();\r\n    const lastPreviouslySelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastPreviouslySelected.name))\r\n    const lastSelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastFile.name))\r\n\r\n    let toAdd = [];\r\n    if (lastSelectedIndex > lastPreviouslySelectedIndex) {\r\n        toAdd = fileList.filter((index, element) => {\r\n            return fileList.indexOf(index) <= lastSelectedIndex && fileList.indexOf(index) >= lastPreviouslySelectedIndex\r\n        });\r\n    } else {\r\n        toAdd = fileList.filter((index, element) => {\r\n            return fileList.indexOf(index) >= lastSelectedIndex && fileList.indexOf(index) <= lastPreviouslySelectedIndex\r\n        });\r\n    }\r\n    dispatch(setSelectedFiles([...selectedFiles, ...toAdd]));\r\n};\r\n\r\n\r\n/**\r\n * @returns {Function}\r\n */\r\nexport const initSubList = () => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setSelectedFolderSublist(null));\r\n    dispatch(setFileListSublist([]));    \r\n    dispatch(setPathSublist([...path]));\r\n    dispatch(refreshFileListSublist());\r\n};\r\n\r\nexport const resetFileUploader = () => (dispatch, getState) => {\r\n    dispatch(setFileUploadProgress(0));\r\n    dispatch(setVisibleDialogUploadFile(false));\r\n    dispatch(setFileUploadList([]));\r\n};\r\n\r\nexport const resetTaskDialog = () => (dispatch, getState) => {\r\n    dispatch(setVisibleDialogTask(false));\r\n    dispatch(setTaskList([]));\r\n}\r\n\r\nexport const enterToPreviousDirectory = () => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setPath(path.slice(0, -1)));\r\n    dispatch(setFileListFilter(null));\r\n    dispatch(refreshFileList());\r\n};\r\n\r\nexport const enterToPreviousDirectoryByIndex = (index) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    const newPath = [...path].slice(0, ++index);\r\n    dispatch(setPath(newPath));\r\n    dispatch(refreshFileList());\r\n    dispatch(setFileListFilter(null));\r\n};\r\n\r\nexport const enterToPreviousDirectorySublist = () => (dispatch, getState) => {\r\n    const { pathSublist } = getState();\r\n    dispatch(setPathSublist(pathSublist.slice(0, -1)));\r\n    dispatch(refreshFileListSublist());\r\n};\r\n\r\nexport const setPath = (path) => {\r\n    return {\r\n        type: 'SET_PATH',\r\n        value: path\r\n    };\r\n};\r\n\r\nexport const setPathSublist = (path) => {\r\n    return {\r\n        type: 'SET_PATH_SUB_LIST',\r\n        value: path\r\n    };\r\n};\r\n\r\nexport const enterToDirectory = (directory) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: 'ENTER_TO_DIRECTORY',\r\n        value: directory\r\n    });\r\n    dispatch(setFileListFilter(null));\r\n    dispatch(refreshFileList());\r\n};\r\n\r\nexport const enterToDirectorySublist = (directory) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: 'ENTER_TO_DIRECTORY_SUB_LIST',\r\n        value: directory\r\n    });\r\n    dispatch(refreshFileListSublist());\r\n};\r\n\r\nexport const setFileList = (fileList) => {\r\n    return {\r\n        type: 'SET_FILE_LIST',\r\n        value: fileList\r\n    };\r\n};\r\n\r\nexport const setTaskList = (taskList) => {\r\n    return {\r\n        type: 'SET_TASK_LIST',\r\n        value: taskList\r\n    }\r\n}\r\n\r\nexport const setFileListSublist = (fileList) => {\r\n    return {\r\n        type: 'SET_FILE_LIST_SUB_LIST',\r\n        value: fileList\r\n    };\r\n};\r\n\r\nexport const setSelectedFiles = (files) => {\r\n    return {\r\n        type: 'SET_SELECTED_FILES',\r\n        value: files\r\n    };\r\n};\r\n\r\nexport const setSelectedFolderSublist = (file) => {\r\n    return {\r\n        type: 'SET_SELECTED_FOLDER_SUB_LIST',\r\n        value: file\r\n    };\r\n};\r\n\r\nexport const setFileListFilter = (search) => {\r\n    return {\r\n        type: 'SET_FILE_LIST_FILTER',\r\n        value: search\r\n    };\r\n};\r\n\r\nexport const setContextMenuVisible = (visible) => {\r\n    return {\r\n        type: 'SET_CONTEXT_MENU_VISIBLE',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setContextMenuPosition = (x, y) => {\r\n    return {\r\n        type: 'SET_CONTEXT_MENU_POSITION',\r\n        value: [x, y]\r\n    };\r\n};\r\n\r\nexport const setContextMenuPositionElement = (element) => {\r\n    return {\r\n        type: 'SET_CONTEXT_MENU_POSITION_ELEMENT',\r\n        value: element\r\n    };\r\n};\r\n\r\nexport const toggleSelectedFile = (file) => {\r\n    return {\r\n        type: 'TOGGLE_SELECTED_FILE',\r\n        value: file\r\n    };\r\n};\r\n\r\nexport const rightClickOnFile = (file) => (dispatch, getState) => {\r\n    const { selectedFiles } = getState();\r\n    const isSelected = selectedFiles.indexOf(selectedFiles.find(f => f.name === file.name)) !== -1;\r\n\r\n    !isSelected && dispatch(setSelectedFiles([file]));\r\n};\r\n\r\nexport const setLoading = (value) => {\r\n    return {\r\n        type: 'SET_LOADING',\r\n        value: value\r\n    };\r\n};\r\n\r\nexport const setLoadingSublist = (value) => {\r\n    return {\r\n        type: 'SET_LOADING_SUB_LIST',\r\n        value: value\r\n    };\r\n};\r\n\r\nexport const setVisibleDialogCreateFolder = (visible) => {\r\n    return {\r\n        type: 'SET_VISIBLE_DIALOG_CREATE_FOLDER',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setVisibleDialogUploadFile = (visible) => {\r\n    return {\r\n        type: 'SET_VISIBLE_DIALOG_UPLOAD_FILE',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setVisibleDialogRename = (visible) => {\r\n    return {\r\n        type: 'SET_VISIBLE_DIALOG_RENAME',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setVisibleDialogMove = (visible) => {\r\n    return {\r\n        type: 'SET_VISIBLE_DIALOG_MOVE',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setVisibleDialogCopy = (visible) => {\r\n    return {\r\n        type: 'SET_VISIBLE_DIALOG_COPY',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setVisibleDialogContent = (visible) => {\r\n    return {\r\n        type: 'SET_VISIBLE_DIALOG_CONTENT',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setVisibleDialogTask = (visible) => {\r\n    return {\r\n        type: 'SET_VISIBLE_DIALOG_TASK',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setVisibleDialogEdit = (visible) => {\r\n    return {\r\n        type: 'SET_VISIBLE_DIALOG_EDIT',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setFileContent = (blob) => {\r\n   return {\r\n        type: 'SET_FILE_CONTENT',\r\n        value: blob\r\n    };\r\n};\r\n\r\nexport const setFileUploadProgress = (percentage) => {\r\n   return {\r\n        type: 'SET_FILE_UPLOAD_PROGRESS',\r\n        value: percentage\r\n    };\r\n};\r\n\r\nexport const setFileUploadList = (files) => {\r\n   return {\r\n        type: 'SET_FILE_UPLOAD_LIST',\r\n        value: files\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    enterToDirectory, setContextMenuVisible, toggleSelectedFile, setContextMenuPosition,\r\n    setSelectedFileFromLastTo, getFileContent, getFileContentForEdit, \r\n    rightClickOnFile, setSelectedFiles\r\n} from '../../Actions/Actions.js';\r\nimport './File.css';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport config from '../../config.js';\r\nimport { getHumanFileSize } from '../../Api/ApiHandler';\r\n\r\nclass File extends Component {\r\n    render() {\r\n        const { isSelected, type, name, size, handleClick, handleDoubleClick, handleContextMenu } = this.props;\r\n        const avatarStyle = {\r\n            backgroundColor: isSelected ? blue['A200'] : null\r\n        };\r\n        const realSize = typeof size !== 'undefined' && type !== 'dir' ? getHumanFileSize(size) : null;\r\n        return (\r\n            <div className=\"File\" onClick={handleClick} onDoubleClick={handleDoubleClick} onContextMenu={handleContextMenu} data-selected={isSelected}>\r\n                <ListItem>\r\n                    <ListItemAvatar>\r\n                        <Avatar style={avatarStyle}>\r\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText className=\"filename\" primary={name} secondary={realSize} />\r\n                </ListItem>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        filePath: [...state.path, ownProps.name],\r\n        isSelected: !!state.selectedFiles.find(f => f.name === ownProps.name)\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        /**\r\n         * @param {Object} event\r\n         * @returns {undefined}\r\n         */\r\n        handleDoubleClick: (event) => {\r\n            if (ownProps.type === 'file') {\r\n                if (config.isEditableFilePattern.test(ownProps.name) || ownProps.editable) {\r\n                    dispatch(getFileContentForEdit(ownProps.name));\r\n                } else if (config.isImageFilePattern.test(ownProps.name)) {\r\n                    dispatch(getFileContent(ownProps.name));\r\n                }\r\n                return;\r\n            }\r\n\r\n            dispatch(enterToDirectory(ownProps.name));\r\n        },\r\n\r\n        /**\r\n         * @param {Object} event\r\n         * @returns {undefined}\r\n         */\r\n        handleContextMenu: (event) => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n\r\n            const x = event.clientX || (event.touches && event.touches[0].pageX);\r\n            const y = event.clientY || (event.touches && event.touches[0].pageY);\r\n\r\n            if (event.shiftKey) {\r\n                dispatch(setSelectedFileFromLastTo(ownProps));\r\n            } else {\r\n                dispatch(rightClickOnFile(ownProps));\r\n            }\r\n            \r\n            dispatch(setContextMenuVisible(true));\r\n            dispatch(setContextMenuPosition(x, y));\r\n        },\r\n\r\n        /**\r\n         * @param {Object} event\r\n         * @returns {undefined}\r\n         */\r\n        handleClick: (event) => {\r\n            event.stopPropagation();\r\n\r\n            if (event.ctrlKey) {\r\n                dispatch(toggleSelectedFile(ownProps));\r\n            } else if (event.shiftKey) {\r\n                dispatch(setSelectedFileFromLastTo(ownProps));\r\n            } else {\r\n                dispatch(setSelectedFiles([ownProps]));\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nFile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    size: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number\r\n    ]),\r\n    editable: PropTypes.oneOfType([\r\n        PropTypes.bool, PropTypes.number\r\n    ])\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(File);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './FileListEmptyMessage.css';\r\n\r\nclass FileListEmptyMessage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"FileListEmptyMessage\">\r\n                No files in this folder\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    };\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListEmptyMessage);\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = theme => ({\r\n  progress: {\r\n    margin: theme.spacing.unit * 10,\r\n  },\r\n});\r\n\r\nfunction Loader(props) {\r\n    const { classes } = props;\r\n    return (\r\n        <Grid container justify=\"center\">\r\n            <CircularProgress className={classes.progress} color=\"secondary\" />\r\n        </Grid>\r\n    );\r\n}\r\n\r\nLoader.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Loader);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport File from '../File/File.jsx'; \r\nimport FileListEmptyMessage from './FileListEmptyMessage';\r\nimport Loader from '../Loader/Loader.jsx'; \r\nimport './FileList.css';\r\n\r\nclass FileList extends Component {\r\n    render() {\r\n        const { fileList, loading } = this.props;\r\n        \r\n        const fileListComponent = fileList.map((file, key) => {\r\n            return <File type={file.type} name={file.name} editable={file.editable} size={file.size} key={key} />\r\n        });\r\n\r\n        return <div className=\"FileList\">\r\n            { loading ? \r\n                <Loader /> : \r\n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    const filteredList = state.fileList.filter(\r\n        file => state.fileListFilter ? file.name.toLocaleLowerCase().match(state.fileListFilter.toLocaleLowerCase()) : true\r\n    );\r\n    return {\r\n        fileList: filteredList,\r\n        loading: state.loading\r\n    };\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleClick: (event) => {\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FileList);\r\n\r\n\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\r\nimport { setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\r\n\r\nfunction CreateFolderAction(props) {\r\n    const {handleClick, handleClose} = props;\r\n\r\n    const handleCloseAfter = (callback) => (event) => {\r\n        callback();\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\r\n            <ListItemIcon>\r\n                <CreateNewFolderIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Create folder\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event) => {\r\n            dispatch(setVisibleDialogCreateFolder(true));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFolderAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { setVisibleDialogUploadFile } from '../../../Actions/Actions.js';\r\n\r\nfunction UploadFileAction(props) {\r\n    const {handleClick, handleClose} = props;\r\n\r\n    const handleCloseAfter = (callback) => (event) => {\r\n        callback();\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\r\n            <ListItemIcon>\r\n                <CloudUploadIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Upload files\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event) => {\r\n            dispatch(setVisibleDialogUploadFile(true));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadFileAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport { setVisibleDialogTask, refreshTaskList} from '../../../Actions/Actions.js';\r\n\r\nfunction TaskAction(props) {\r\n    const {handleClick, handleClose} = props;\r\n\r\n    const handleCloseAfter = (callback) => (event) => {\r\n        callback();\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\r\n            <ListItemIcon>\r\n                <FileCopyIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Task\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event) => {\r\n            dispatch(refreshTaskList());\r\n            dispatch(setVisibleDialogTask(true));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskAction);\r\n","import React from 'react';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { connect } from 'react-redux';\r\nimport CreateFolderAction from '../ContextMenu/ContextMenuActions/CreateFolderAction.jsx';\r\nimport UploadFileAction from '../ContextMenu/ContextMenuActions/UploadFileAction.jsx';\r\nimport TaskAction from '../ContextMenu/ContextMenuActions/TaskAction.jsx';\r\n\r\nclass ThreeDotsMenu extends React.Component {\r\n  state = {\r\n    anchorEl: null,\r\n  };\r\n\r\n  handleClick = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  render() {\r\n    const { anchorEl } = this.state;\r\n    return (\r\n      <div style={{marginLeft:'1em'}}>\r\n        <IconButton color=\"inherit\" \r\n          aria-label=\"More\"\r\n          aria-owns={Boolean(anchorEl) ? 'long-menu' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={this.handleClick}>\r\n          <MoreVertIcon />\r\n        </IconButton>\r\n\r\n        <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={this.handleClose}>\r\n          <CreateFolderAction handleClose={this.handleClose} />\r\n          <UploadFileAction handleClose={this.handleClose} />\r\n          <TaskAction handleClose={this.handleClose} />\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThreeDotsMenu);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport Button from '@material-ui/core/Button';\r\nimport './BreadcrumbText.css';\r\n\r\nconst styles = theme => ({\r\n  lastPath: {\r\n    display: 'block',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  paths: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    }\r\n  }\r\n});\r\n\r\nclass BreadcrumbText extends Component {\r\n\r\n    render() {\r\n        const { classes, handleClickPath, path, rootTitle, handleGoBack, canGoBack } = this.props;\r\n\r\n        const separator = <span>&gt;</span>;\r\n        const rootPath = <span onClick={(e) => handleClickPath(e, -1, path)} data-index={0}>\r\n            { rootTitle } { path.length ? separator : '' }\r\n        </span>;\r\n        const lastPath = [...path].pop() || rootTitle;\r\n\r\n        const directories = path.map((dir, index) => {\r\n            return <span key={index} data-index={index} onClick={(e) => handleClickPath(e, index, path)}>\r\n                <span>{dir}</span> { path.length -1 !== index ? separator : '' }&nbsp;\r\n            </span>\r\n        });\r\n\r\n        return (\r\n            <div className=\"BreadcrumbText\">\r\n                <div className={classes.lastPath}>\r\n                    <Button onClick={handleGoBack} color=\"inherit\" type=\"button\" style={{display: canGoBack ? 'inline-flex' : 'none'}}>\r\n                        <KeyboardArrowLeftIcon />\r\n                    </Button>\r\n                    {lastPath}\r\n                </div>\r\n                <div className={classes.paths}>{rootPath} {directories}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(BreadcrumbText));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { connect } from 'react-redux';\r\nimport { setFileListFilter, enterToPreviousDirectoryByIndex } from '../../Actions/Actions.js';\r\nimport ThreeDotsMenu from './ThreeDotsMenu.jsx';\r\nimport BreadcrumbText from '../Breadcrumb/BreadcrumbText.jsx';\r\nimport { enterToPreviousDirectory } from '../../Actions/Actions.js';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginBottom: '4.3em'\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  title: {\r\n    display: 'block', // was none\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing.unit,\r\n      width: 'auto',\r\n      display: 'block'\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing.unit * 9,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit * 10,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 100,\r\n      '&:focus': {\r\n        width: 200,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nfunction SearchAppBar(props) {\r\n  const { classes, path, handleClickPath, handleGoBack, canGoBack } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n            <BreadcrumbText \r\n                path={path} \r\n                handleClickPath={handleClickPath} \r\n                handleGoBack={handleGoBack}\r\n                canGoBack={canGoBack}\r\n                rootTitle=\"React Filemanager\"\r\n            />\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              value={props.value}\r\n              onChange={props.handleChange}\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n            />\r\n          </div>\r\n          <ThreeDotsMenu />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nSearchAppBar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        value: state.fileListFilter || '',\r\n        path: state.path,\r\n        canGoBack: state.path.length\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleChange: (event) => {\r\n            dispatch(setFileListFilter(event.currentTarget.value));\r\n        },\r\n        handleGoBack: (event) => {\r\n            dispatch(enterToPreviousDirectory());\r\n        },\r\n        /**\r\n         * @param {Object} event\r\n         * @param {Number} index\r\n         * @param {Array} path\r\n         * @returns {undefined}\r\n         */        \r\n        handleClickPath: (event, index) => {\r\n            dispatch(enterToPreviousDirectoryByIndex(index));\r\n            event.preventDefault();\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(SearchAppBar));\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport { getFileContent, enterToDirectory } from '../../../Actions/Actions.js';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\r\n\r\nfunction OpenAction(props) {\r\n    const {handleClick, selectedFiles} = props;\r\n    return (\r\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\r\n            <ListItemIcon>\r\n                <OpenInBrowserIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Open\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event, selectedFiles) => {\r\n            if (selectedFiles[0].type === 'dir') {\r\n                dispatch(enterToDirectory(selectedFiles[0].name));\r\n                return;\r\n            }\r\n            dispatch(getFileContent(selectedFiles[0].name));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport { removeItems } from '../../../Actions/Actions.js';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nfunction RemoveAction(props) {\r\n    const {handleClick, selectedFiles} = props;\r\n    return (\r\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\r\n            <ListItemIcon>\r\n                <DeleteIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Remove\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event, selectedFiles) => {\r\n            dispatch(removeItems(selectedFiles));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\r\nimport { initSubList, setVisibleDialogMove } from '../../../Actions/Actions.js';\r\n\r\nfunction MoveAction(props) {\r\n    const {handleClick, selectedFiles} = props;\r\n\r\n    return (\r\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\r\n            <ListItemIcon>\r\n                <HowToVoteIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Move\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event, selectedFiles) => {\r\n            dispatch(initSubList());\r\n            dispatch(setVisibleDialogMove(true));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport { initSubList, setVisibleDialogCopy } from '../../../Actions/Actions.js';\r\n\r\nfunction CopyAction(props) {\r\n    const {handleClick, selectedFiles} = props;\r\n\r\n    return (\r\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\r\n            <ListItemIcon>\r\n                <FileCopyIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Copy\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event, selectedFiles) => {\r\n            dispatch(initSubList());\r\n            dispatch(setVisibleDialogCopy(true));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CopyAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport { getFileContentForEdit } from '../../../Actions/Actions.js';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\r\n\r\nfunction OpenAction(props) {\r\n    const {handleClick, selectedFiles} = props;\r\n    return (\r\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\r\n            <ListItemIcon>\r\n                <OpenInBrowserIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Edit\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event, selectedFiles) => {\r\n            dispatch(getFileContentForEdit(selectedFiles[0].name));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport WrapTextIcon from '@material-ui/icons/WrapText';\r\nimport { setVisibleDialogRename } from '../../../Actions/Actions.js';\r\n\r\nfunction MoveAction(props) {\r\n    const {handleClick, selectedFiles} = props;\r\n\r\n    return (\r\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\r\n            <ListItemIcon>\r\n                <WrapTextIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Rename\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event, selectedFiles) => {\r\n            dispatch(setVisibleDialogRename(true));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport { downloadFile } from '../../../Actions/Actions.js';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\n\r\nfunction DownloadAction(props) {\r\n    const {handleClick, selectedFiles} = props;\r\n    return (\r\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\r\n            <ListItemIcon>\r\n                <CloudDownloadIcon   />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Download\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event, selectedFiles) => {\r\n            dispatch(downloadFile(selectedFiles[0].name));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DownloadAction);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './ContextMenu.css';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { getActionsByMultipleFiles } from '../../Api/ApiHandler.js';\r\nimport OpenAction from './ContextMenuActions/OpenAction.jsx';\r\nimport RemoveAction from './ContextMenuActions/RemoveAction.jsx';\r\nimport MoveAction from './ContextMenuActions/MoveAction.jsx';\r\nimport CopyAction from './ContextMenuActions/CopyAction.jsx';\r\nimport EditAction from './ContextMenuActions/EditAction.jsx';\r\nimport RenameAction from './ContextMenuActions/RenameAction.jsx';\r\nimport DownloadAction from './ContextMenuActions/DownloadAction.jsx';\r\n\r\nclass ContextMenu extends Component {\r\n\r\n    render() {\r\n        const { acts, visible, x, y } = this.props;\r\n        const actionsComp = acts.map((act, key) => {\r\n            let component;\r\n            if (act === 'open') {\r\n                component = <OpenAction key={key} />;\r\n            }\r\n            if (act === 'edit') {\r\n                component = <EditAction key={key} />;\r\n            }\r\n            if (act === 'copy') {\r\n                component = <CopyAction key={key} />;\r\n            }            \r\n            if (act === 'move') {\r\n                component = <MoveAction key={key} />;\r\n            }\r\n            if (act === 'rename') {\r\n                component = <RenameAction key={key} />;\r\n            }\r\n            if (act === 'download') {\r\n                component = <DownloadAction key={key} />;\r\n            }\r\n            if (act === 'remove') {\r\n                component = <RemoveAction key={key} />;\r\n            }\r\n            return component;\r\n        });\r\n\r\n        return (\r\n            <div> \r\n                <Menu \r\n                    anchorReference=\"anchorPosition\"\r\n                    anchorPosition={{ top: y, left: x }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    open={visible} \r\n                    onClose={ () => {} } \r\n                    PaperProps={{ style: {width: 170} }}>\r\n                    { actionsComp }\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        x: state.contextMenuPosition[0] || 0,\r\n        y: state.contextMenuPosition[1] || 0,\r\n        visible: !!state.contextMenuVisible,\r\n        acts: getActionsByMultipleFiles(state.selectedFiles),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContextMenu);\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { setVisibleDialogContent } from '../../../Actions/Actions.js';\r\n\r\nclass FormDialog extends Component {\r\n\r\n    state = {\r\n        lastBlobUrl: null,\r\n        content: '...',\r\n        loading: false\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\r\n            this.setState({\r\n                lastBlobUrl: this.props.blobUrl\r\n            });\r\n            this.setState({\r\n                loading: true\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { handleClose, open } = this.props;\r\n        return (\r\n          <div style={{marginLeft:'1em'}}>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-content\" fullWidth={true} maxWidth={'sm'}>\r\n              <DialogTitle id=\"form-dialog-content\">Viewing file </DialogTitle>\r\n              <DialogContent>\r\n                <img src={this.props.blobUrl} alt=\"\" style={{maxWidth: '100%'}}/>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                  Close\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        open: state.visibleDialogContent,\r\n        blobUrl: state.fileContentBlobUrl\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: (event) => {\r\n            dispatch(setVisibleDialogContent(false));\r\n        },\r\n        handleOpen: (event) => {\r\n            dispatch(setVisibleDialogContent(true));\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { setVisibleDialogEdit } from '../../../Actions/Actions.js';\r\n\r\nclass FormDialog extends Component {\r\n\r\n    state = {\r\n        lastBlobUrl: null,\r\n        content: null,\r\n        loading: false\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\r\n            this.setState({\r\n                lastBlobUrl: this.props.blobUrl\r\n            });\r\n            this.setState({\r\n                loading: true\r\n            });\r\n\r\n            this.props.blobUrl && fetch(this.props.blobUrl).then(r => {\r\n                return r.text();\r\n            }).then(t => {\r\n                this.setState({\r\n                    content: t\r\n                });\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { handleClose, handleSave, open } = this.props;\r\n        const textAreaStyle = {\r\n            width: '100%',\r\n            minHeight: '300px'\r\n        };\r\n        const textArea = <textarea style={textAreaStyle} defaultValue={this.state.content || ''} />;\r\n\r\n        return (\r\n          <div>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-edit\" fullWidth={true} maxWidth={'sm'}>\r\n              <DialogTitle id=\"form-dialog-edit\">Editing file </DialogTitle>\r\n              <DialogContent>\r\n                  <DialogContentText>\r\n                    { this.state.loading ? 'Loading...' : textArea }\r\n                  </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                    Close\r\n                </Button>\r\n                <Button color=\"primary\" onClick={handleSave} type=\"submit\">\r\n                    Update\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        open: state.visibleDialogEdit,\r\n        blobUrl: state.fileContentBlobUrl\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: (event) => {\r\n            dispatch(setVisibleDialogEdit(false));\r\n        },\r\n        handleOpen: (event) => {\r\n            dispatch(setVisibleDialogEdit(true));\r\n        },\r\n        handleSave: (event) => {\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { createNewFolder, setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\r\n\r\nclass FormDialog extends Component {\r\n\r\n    render() {\r\n        const { handleClose, handleSave, value, open } = this.props;\r\n\r\n        return (\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\r\n                <form>\r\n                  <DialogTitle id=\"form-dialog-create-folder\">Create folder</DialogTitle>\r\n                  <DialogContent>\r\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Folder name\" type=\"text\" value={value} />\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                      Cancel\r\n                    </Button>\r\n                    <Button color=\"primary\" type=\"submit\" onClick={handleSave}>\r\n                      Save\r\n                    </Button>\r\n                  </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        createFolderName: state.createFolderName,\r\n        open: state.visibleDialogCreateFolder\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: event => {\r\n            dispatch(setVisibleDialogCreateFolder(false));\r\n        },\r\n        handleSave: event => {\r\n            event.preventDefault();\r\n            const folderName = event.currentTarget.form.querySelector('input').value;\r\n            dispatch(createNewFolder(folderName));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { renameItem, setVisibleDialogRename } from '../../../Actions/Actions.js';\r\n\r\nclass FormDialog extends Component {\r\n\r\n    state = {\r\n        value: ''\r\n    };\r\n\r\n    componentWillReceiveProps (props) {\r\n        this.setState({value: props.realName});\r\n    }\r\n\r\n    handleChange (event) {\r\n        this.setState({value: event.currentTarget.form.querySelector('input').value});\r\n    }\r\n\r\n    handleSave (event) {\r\n        this.props.handleSave(event)(this.props.realName, this.state.value);\r\n    }\r\n\r\n    render() {\r\n        const { value } = this.state;\r\n        const { handleClose, open } = this.props;\r\n\r\n        return (\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\r\n                <form>\r\n                  <DialogTitle id=\"form-dialog-create-folder\">Rename</DialogTitle>\r\n                  <DialogContent>\r\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Item name\" type=\"text\" onChange={this.handleChange.bind(this)} value={value} />\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                      Cancel\r\n                    </Button>\r\n                    <Button color=\"primary\" type=\"submit\" onClick={this.handleSave.bind(this)}>\r\n                      Save\r\n                    </Button>\r\n                  </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        open: state.visibleDialogRename,\r\n        realName: state.selectedFiles.length ? state.selectedFiles[0].name : ''\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: event => {\r\n            dispatch(setVisibleDialogRename(false));\r\n        },\r\n        handleSave: event => (realName, newName) => {\r\n            event.preventDefault();\r\n            dispatch(renameItem(realName, newName));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    setSelectedFolderSublist, enterToDirectorySublist \r\n} from '../../../Actions/Actions.js';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport '../File.css';\r\n\r\nconst styles = theme => ({\r\n});\r\n\r\n\r\nclass FileSublist extends Component {\r\n    render() {\r\n        const { type, name, handleClick, isSelected, handleDoubleClick } = this.props;\r\n        const avatarStyle = {\r\n            backgroundColor: isSelected ? blue['A200'] : null\r\n        };\r\n        return (\r\n            <div className=\"File\" onClick={handleClick} data-selected={isSelected} onDoubleClick={handleDoubleClick}>\r\n                <ListItem>\r\n                    <ListItemAvatar>\r\n                        <Avatar style={avatarStyle}>\r\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={name} secondary=\"\" />\r\n                </ListItem>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        filePath: [...state.path, ownProps.name],\r\n        isSelected: state.selectedFolderSublist && (state.selectedFolderSublist.name === ownProps.name)\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        /**\r\n         * @param {Object} event\r\n         * @returns {undefined}\r\n         */\r\n        handleDoubleClick: (event) => {\r\n            dispatch(enterToDirectorySublist(ownProps.name));\r\n            dispatch(setSelectedFolderSublist(null));\r\n        },\r\n\r\n        /**\r\n         * @param {Object} event\r\n         * @returns {undefined}\r\n         */\r\n        handleClick: (event) => {\r\n            event.stopPropagation(); \r\n            dispatch(setSelectedFolderSublist(ownProps));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FileSublist));\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FileSublist from '../../File//FileSublist/FileSublist.jsx'; \r\nimport Loader from '../../Loader/Loader.jsx'; \r\nimport FileListEmptyMessage from '../FileListEmptyMessage';\r\nimport './FileListSublist.css'; \r\n\r\nclass FileListSublist extends Component {\r\n    render() {\r\n        const { fileList, loadingSublist } = this.props;\r\n        \r\n        const fileListComponent = fileList.map((file, key) => {\r\n            return <FileSublist type={file.type} name={file.name} key={key} />\r\n        });\r\n\r\n        return <div className=\"FileListSublist\">\r\n            { loadingSublist ? \r\n                <Loader /> : \r\n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const filteredList = state.fileListSublist\r\n        .filter(file => file.type === 'dir')\r\n        .filter(file => state.path.join('').trim() === state.pathSublist.join('').trim() ? \r\n            !state.selectedFiles.find(f => f.name === file.name) : true\r\n        );\r\n    return {\r\n        fileList: filteredList,\r\n        loadingSublist: state.loadingSublist,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListSublist);","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { setVisibleDialogMove, setSelectedFolderSublist, enterToPreviousDirectorySublist, moveItems } from '../../../Actions/Actions.js';\r\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\n\r\nclass FormDialog extends Component {\r\n\r\n    render() {\r\n        const { \r\n            selectedPath, handleClose, handleSave, open, \r\n            selectedFiles, canGoBack, canMove, handleGoBack \r\n        } = this.props;\r\n\r\n        return (\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-move\" fullWidth={true} maxWidth={'sm'}>\r\n                <form>\r\n                    <DialogTitle id=\"form-dialog-move\">\r\n                        Move files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <FileListSublist />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\r\n                            <KeyboardArrowLeftIcon /> Go back directory\r\n                        </Button>\r\n\r\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canMove} type=\"submit\">\r\n                            Move\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // prevent moving to same folder\r\n    const canMove = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\r\n\r\n    return {\r\n        open: state.visibleDialogMove,\r\n        selectedFolderSublist: state.selectedFolderSublist,\r\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\r\n        selectedFiles: state.selectedFiles,\r\n        pathSublist: state.pathSublist,\r\n        canGoBack: state.pathSublist.length,\r\n        canMove: state.selectedFolderSublist && canMove\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: (event) => {\r\n            dispatch(setSelectedFolderSublist(null));\r\n            dispatch(setVisibleDialogMove(false));\r\n        },\r\n        handleSave: (event, selectedFiles) => {\r\n            event.preventDefault();\r\n            dispatch(moveItems(selectedFiles));\r\n        },\r\n        handleGoBack: (event) => {\r\n            dispatch(setSelectedFolderSublist(null));\r\n            dispatch(enterToPreviousDirectorySublist());\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { setVisibleDialogCopy, setSelectedFolderSublist, enterToPreviousDirectorySublist, copyItems } from '../../../Actions/Actions.js';\r\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\n\r\nclass FormDialog extends Component {\r\n\r\n    render() {\r\n        const { \r\n            selectedPath, handleClose, handleSave, open, \r\n            canGoBack, canCopy, selectedFiles, handleGoBack \r\n        } = this.props;\r\n\r\n        return (\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-copy\" fullWidth={true} maxWidth={'sm'}>\r\n                <form>\r\n                    <DialogTitle id=\"form-dialog-copy\">\r\n                        Copy files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <FileListSublist />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\r\n                            <KeyboardArrowLeftIcon /> Go back directory\r\n                        </Button>\r\n\r\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canCopy} type=\"submit\">\r\n                            Copy\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // prevent copying to same folder\r\n    const canCopy = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\r\n\r\n    return {\r\n        open: state.visibleDialogCopy,\r\n        selectedFolderSublist: state.selectedFolderSublist,\r\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\r\n        canGoBack: state.pathSublist.length,\r\n        canCopy: state.selectedFolderSublist && canCopy,\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: (event) => {\r\n            dispatch(setSelectedFolderSublist(null));\r\n            dispatch(setVisibleDialogCopy(false));\r\n        },\r\n        handleSave: (event, selectedFiles) => {\r\n            event.preventDefault();\r\n            dispatch(copyItems(selectedFiles));\r\n        },\r\n        handleGoBack: (event) => {\r\n            dispatch(setSelectedFolderSublist(null));\r\n            dispatch(enterToPreviousDirectorySublist());\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport { getHumanFileSize } from '../../Api/ApiHandler';\r\n\r\nfunction UploadFileList(props) {\r\n    const { files } = props;\r\n    const list = files.map((f, i) =>\r\n        <ListItem dense key={i}>\r\n            <ListItemIcon>\r\n                <FileIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={`${f.name} (${getHumanFileSize(f.size)})`} />\r\n        </ListItem>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <List component=\"nav\">\r\n                {list}\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n\r\nUploadFileList.propTypes = {\r\n    files: PropTypes.array.isRequired\r\n};\r\n\r\nexport default UploadFileList;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport UploadFileList from './UploadFileList';\r\n\r\nclass FileUploader extends Component {\r\n\r\n    handleReset(event) {\r\n        this.refs.inputfile.value = '';\r\n        this.props.handleReset(event);\r\n    }\r\n\r\n    render() {\r\n        const { fileUploadList, handleSelectedFiles } = this.props;\r\n        const styles = {\r\n            inputfile: {\r\n                display: 'none'\r\n            }, inputreset: {\r\n                display: fileUploadList.length ? 'inline-flex' : 'none'\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <label htmlFor=\"button-file\">\r\n                    <input style={styles.inputfile} id=\"button-file\" ref=\"inputfile\" multiple type=\"file\" onChange={handleSelectedFiles} />\r\n                    <Button component=\"span\" variant=\"contained\" color=\"primary\">\r\n                        Select Files\r\n                    </Button>\r\n                </label>\r\n\r\n                <Button style={styles.inputreset} component=\"span\" type=\"reset\" onClick={this.handleReset.bind(this)}>\r\n                    Clear\r\n                </Button>\r\n\r\n                <UploadFileList files={fileUploadList} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFileUploader.propTypes = {\r\n    fileUploadList: PropTypes.array.isRequired,\r\n    handleReset: PropTypes.func.isRequired,\r\n    handleSelectedFiles: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FileUploader;\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { connect } from 'react-redux';\r\nimport { resetFileUploader, uploadFiles, setFileUploadList } from '../../../Actions/Actions.js';\r\nimport FileUploader from '../../FileUploader/FileUploader.jsx';\r\n\r\nclass FormDialog extends Component {\r\n\r\n    render() {\r\n        const { handleClose, handleReset, handleUpload, open, canUpload, fileUploadProgress, fileUploadList, handleSelectedFiles } = this.props;\r\n\r\n        return (\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-upload\" fullWidth={true} maxWidth={'sm'}>\r\n                <form>\r\n                    <DialogTitle id=\"form-dialog-upload\">\r\n                        Upload files\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <FileUploader handleUpload={handleUpload} fileUploadList={fileUploadList} handleSelectedFiles={handleSelectedFiles} handleReset={handleReset}/>\r\n                        {canUpload ? <LinearProgress variant=\"determinate\" value={fileUploadProgress} /> : null }\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button color=\"primary\" onClick={handleUpload} disabled={!canUpload} type=\"submit\">\r\n                            Upload\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        open: state.visibleDialogUploadFile,\r\n        canUpload: state.fileUploadList.length,\r\n        fileUploadList: state.fileUploadList,\r\n        fileUploadProgress: state.fileUploadProgress\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: (event) => {\r\n            dispatch(resetFileUploader());\r\n        },\r\n        handleUpload: (event) => {\r\n            event.preventDefault();\r\n            const files = event.currentTarget.form.querySelector('input[type=file]').files;\r\n            dispatch(uploadFiles(files));\r\n        },\r\n        handleSelectedFiles: (event) => {\r\n            dispatch(setFileUploadList(\r\n                [...event.target.files].map(f => ({name: f.name, size: f.size}))\r\n            ));\r\n        },\r\n        handleReset: (event) => {\r\n            dispatch(setFileUploadList([]));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React from 'react';\r\nimport { ListItem, ListItemText } from '@material-ui/core';\r\n\r\nexport default (props) => {\r\n    const {name, status} = props;\r\n    return (\r\n        <div>\r\n            <ListItem>\r\n                <ListItemText primary={name} secondary={status}></ListItemText>\r\n            </ListItem>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Task from '../Task/Task.jsx';\r\n\r\nexport default (props) => {\r\n    const { items } = props;\r\n    const taskListComponent = items.map((task, key) => {\r\n        return <Task key={key} name={task.name} status={task.status} />\r\n    })\r\n    return (\r\n        <div>\r\n            { taskListComponent.length ? taskListComponent : <span>Nothing</span> }\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TaskList from '../../TaskList/TaskList.jsx';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { refreshTaskList, resetTaskDialog } from '../../../Actions/Actions.js';\r\n\r\nclass FormDialog extends Component {\r\n\r\n    render() {\r\n        const { handleClose, handleRefresh, open, taskList } = this.props;\r\n\r\n        return (\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-upload\" fullWidth={true} maxWidth={'sm'}>\r\n                <form>\r\n                    <DialogTitle id=\"form-dialog-upload\">\r\n                        Task list\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <TaskList items={taskList}></TaskList>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button color=\"primary\" onClick={handleRefresh} type=\"button\">\r\n                            Update\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        open: state.visibleDialogTask,\r\n        taskList: state.taskList\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: (event) => {\r\n            dispatch(resetTaskDialog());\r\n        },\r\n        handleRefresh: (event) => {\r\n            event.preventDefault();\r\n            dispatch(refreshTaskList());\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React from 'react';\r\nimport DialogContent from './Content/Content.jsx';\r\nimport DialogEdit from './Edit/Edit.jsx';\r\nimport DialogCreateFolder from './CreateFolder/CreateFolder.jsx';\r\nimport DialogRename from './Rename/Rename.jsx';\r\nimport DialogMove from './Move/Move.jsx';\r\nimport DialogCopy from './Copy/Copy.jsx';\r\nimport DialogUploadFile from './UploadFile/UploadFile.jsx';\r\nimport DialogTask from './Task/Task.jsx';\r\n\r\nfunction Dialogs(props) {\r\n    return (\r\n        <div className=\"Dialogs\">\r\n            <DialogContent />\r\n            <DialogEdit />\r\n            <DialogCreateFolder />\r\n            <DialogMove />\r\n            <DialogCopy />\r\n            <DialogRename />\r\n            <DialogUploadFile />\r\n            <DialogTask />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { connect } from 'react-redux';\r\n\r\nconst styles = theme => ({\r\n  close: {\r\n    padding: theme.spacing.unit / 2,\r\n  },\r\n});\r\n\r\nclass DynamicSnackbar extends React.Component {\r\n  render() {\r\n    const { classes, errorMsg, handleClose, open, notificationDuration } = this.props;\r\n    return (\r\n      <div>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={open}\r\n          autoHideDuration={notificationDuration}\r\n          onClose={handleClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">{errorMsg}</span>}\r\n          action={[\r\n            <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" className={classes.close} onClick={handleClose} >\r\n              <CloseIcon />\r\n            </IconButton>,\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDynamicSnackbar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        open: !!state.errorMsg,\r\n        errorMsg: state.errorMsg,\r\n        notificationDuration: state.notificationDuration || 60000\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: (event) => {\r\n            dispatch({\r\n                type: 'SET_ERROR_MSG',\r\n                value: null\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DynamicSnackbar));\r\n\r\n","import React, { Component } from 'react';\r\nimport FileList from './Components/FileList/FileList.jsx';\r\nimport Navbar from './Components/Navbar/Navbar.jsx';\r\nimport ContextMenu from './Components/ContextMenu/ContextMenu.jsx';\r\nimport Dialogs from './Components/Dialogs/Dialogs.jsx';\r\n\r\nimport { MuiThemeProvider as MaterialUI, createMuiTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport { connect } from 'react-redux';\r\nimport { setContextMenuVisible, refreshFileList } from './Actions/Actions.js';\r\nimport DynamicSnackbar from './Components/Notification/DynamicSnackbar.jsx'; \r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: blue,\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n    }\r\n});\r\n\r\nclass App extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.init();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <MaterialUI theme={theme}>\r\n                <div onClick={this.props.handleHideContextMenu} onContextMenu={this.props.handleHideContextMenu}>\r\n                    <Navbar />\r\n                    <FileList />\r\n                    <ContextMenu />\r\n                    <DynamicSnackbar />\r\n                    <Dialogs />\r\n                </div>\r\n            </MaterialUI>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        init: () => {\r\n            dispatch(refreshFileList());\r\n        },\r\n\r\n        handleHideContextMenu: (event) => {\r\n            if (! (event.target.tagName === 'INPUT' || /label/i.test(event.target.className))) {\r\n                event.preventDefault();\r\n            }\r\n            dispatch(setContextMenuVisible(false));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport MainReducer from './Reducers/MainReducer'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nconst store = createStore(MainReducer, applyMiddleware(thunk));\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}